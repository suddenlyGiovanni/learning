{
  "root": true,
  "env": {
    "es2020": true
  },
  "extends": [
    "eslint:all",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",

    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",

    "plugin:jest/all",

    "prettier",
    "prettier/@typescript-eslint"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "project": "./tsconfig.json",
    "ecmaFeatures": {
      "impliedStrict": true
    }
  },
  "plugins": ["@typescript-eslint", "jest", "import"],
  "rules": {
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": {
          "memberTypes": [
            "signature",
            "public-static-field",
            "protected-static-field",
            "private-static-field",
            "public-instance-field",
            "protected-instance-field",
            "private-instance-field",
            "public-abstract-field",
            "protected-abstract-field",
            "private-abstract-field",
            "public-field",
            "protected-field",
            "private-field",
            "static-field",
            "instance-field",
            "abstract-field",
            "field",
            "public-constructor",
            "protected-constructor",
            "private-constructor",
            "constructor",
            "public-static-method",
            "protected-static-method",
            "private-static-method",
            "public-instance-method",
            "protected-instance-method",
            "private-instance-method",
            "public-abstract-method",
            "protected-abstract-method",
            "private-abstract-method",
            "public-method",
            "protected-method",
            "private-method",
            "static-method",
            "instance-method",
            "abstract-method",
            "method"
          ],
          "order": "alphabetically"
        }
      }
    ],
    "capitalized-comments": [
      "warn",
      "always",
      {
        "ignoreConsecutiveComments": true,
        "ignoreInlineComments": true
      }
    ],
    "id-length": [
      "error",
      {
        "exceptions": ["x", "xs", "y", "ys", "f", "i", "j", "n", "z", "_"]
      }
    ],
    "import/extensions": ["warn", "never"],
    "import/order": [
      "warn",
      {
        "alphabetize": {
          "caseInsensitive": true,
          "order": "asc"
        },
        "groups": [
          "builtin",
          "external",
          "parent",
          "sibling",
          "index",
          "internal"
        ],
        "newlines-between": "always-and-inside-groups"
      }
    ],
    "line-comment-position": "off",
    "no-console": [
      "warn",
      {
        "allow": ["warn", "error"]
      }
    ],
    "no-inline-comments": "warn",
    "no-magic-numbers": [
      "warn",
      {
        "detectObjects": true,
        "enforceConst": true,
        "ignoreArrayIndexes": true
      }
    ],
    "no-plusplus": [
      "error",
      {
        "allowForLoopAfterthoughts": true
      }
    ],
    "no-ternary": "off",
    "no-undefined": "off",
    "no-unused-vars": [
      "error",
      {
        "ignoreRestSiblings": true,
        "args": "after-used"
      }
    ],
    "one-var": ["error", "never"],
    "sort-imports": [
      "warn",
      {
        "ignoreCase": false,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": ["none", "all", "multiple", "single"]
      }
    ],
    "sort-keys": [
      "warn",
      "asc",
      {
        "caseSensitive": true,
        "minKeys": 2,
        "natural": true
      }
    ]
  }
}
